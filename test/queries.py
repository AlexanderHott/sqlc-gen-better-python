# Code generated by sqlc. DO NOT EDIT.
# versions:
#   sqlc v1.28.0
# source: queries.sql
import dataclasses
from typing import Any, Optional

import sqlalchemy

from test import models


CREATE_AUTHOR = """-- name: create_author \\:one
INSERT INTO authors (
    name, bio
) VALUES (
             ?, ?
         )
    RETURNING id, name, bio
"""


DELETE_AUTHOR = """-- name: delete_author \\:exec
DELETE FROM authors
WHERE id = ?
"""


GET_AUTHOR = """-- name: get_author \\:one
SELECT id, name FROM authors
WHERE id = ? LIMIT 1
"""


@dataclasses.dataclass()
class GetAuthorRow:
    id: Any
    name: Any


LIST_AUTHORS = """-- name: list_authors \\:many
SELECT id, name, bio FROM authors
WHERE id IN (/*SLICE\\:ids*/?)
ORDER BY name
"""


UPDATE_AUTHOR = """-- name: update_author \\:batchexec
UPDATE authors
set name = ?,
    bio = ?
WHERE id = ?
"""


UPDATE_AUTHOR_T = """-- name: update_author_t \\:one
UPDATE authors
SET
    name = coalesce(?1, name),
    bio = coalesce(?2, bio)
WHERE id = ?3
    RETURNING id, name, bio
"""


UPSERT_AUTHOR_NAME = """-- name: upsert_author_name \\:one
UPDATE authors
SET name = CASE WHEN ?2 THEN ? ELSE name END
    RETURNING id, name, bio
"""
